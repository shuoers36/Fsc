package com.hfsc.service.impl;

import java.util.List;

import com.hfsc.dao.UserDao;
import com.hfsc.dao.impl.UserDaoImpl;
import com.hfsc.model.User;
import com.hfsc.model.Page;
import com.hfsc.service.UserService;

public class UserServiceImpl implements UserService {
    
    @Override
    public void insertUser(User user) {
        UserDao userDao = new UserDaoImpl();
        userDao.insertUser(user);
    }
    
    @Override
    public void updateUser(User user) {
        UserDao userDao = new UserDaoImpl();
        userDao.updateUser(user);
        
    }
    
    @Override
    public void deleteUser(Long id) {
        UserDao userDao = new UserDaoImpl();
        userDao.deleteUser(id);
        
    }
    
    @Override
    public List<User> queryUser(User user,Page page) {
        UserDao userDao = new UserDaoImpl();
        return userDao.queryUser(user,page);
    }
    @Override
    public List<User> queryRole(User user) {
        UserDao userDao = new UserDaoImpl();
        return userDao.queryRole(user);
    }
    @Override
    public List<User> queryResource(String role_name) {
        UserDao userDao = new UserDaoImpl();
        return userDao.queryResource(role_name);
    }
    
    @Override
    public User queryUserByUserId(Long id) {
        UserDao userDao = new UserDaoImpl();
        User user = new User();
        Page page = new Page();
        user.setId(id);
        page.setPage(1);
        List<User> list = userDao.queryUser(user,page);
        if (0 == list.size()) {
        	user = new User();
        	return user;
        }
        else {
        	return list.get(0);
        }
    }
    @Override
    public User queryUserByName(String name) {
        UserDao userDao = new UserDaoImpl();
        User user = new User();
        Page page = new Page();
        page.setPage(1);
        user.setUserName(name);
        List<User> list = userDao.queryUser(user,page);
        if (0 == list.size()) {
        	user = new User();
        	return user;
        }
        else {
        	return list.get(0);
        }
        
    }
    /* @Override
    public Long getNowId(User user) {
    	UserDao userDao = new UserDaoImpl();
    	Page page = new Page();
        page.setPage(1);
        List<User> list = userDao.queryUser(user,page);
        return  list.get(list.size()-1).getId(); 
    }*/
}
